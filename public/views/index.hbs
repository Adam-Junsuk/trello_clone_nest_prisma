{{! public/views/index.hbs }}

<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />
    <title>메인 페이지</title>
    <link
      href='https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css'
      rel='stylesheet'
    />
  </head>
  <body>
    <header class='bg-dark text-light'>
      <div class='container py-3'>
        <div class='row justify-content-between align-items-center'>
          <div class='col-auto'>
            <button
              class='btn btn-primary me-2'
              data-bs-toggle='modal'
              data-bs-target='#signupModal'
            >
              회원가입
            </button>

            <button class='btn btn-primary me-2'>
              <a href='/login' style="color: white; text-decoration: none;">로그인</a>
            </button>

          </div>
          <div class='col-auto'>
            <a href='/boards' class='btn btn-link text-light me-2'>보드</a>
            {{!-- <a href='/columns' class='btn btn-link text-light me-2'>컬럼</a> --}}
            <a href='#' id='showColumns' class='btn btn-link text-light me-2'>컬럼</a>
            <a href='/users' class='btn btn-link text-light me-2'>사용자 목록</a>
          </div>
        </div>
      </div>
    </header>
    <!-- 나머지 부분은 동일하게 유지 -->
<a href='#' id='showColumns' class='btn btn-link text-light me-2'>컬럼</a>

<div id='columnsTable' style='display:none;'>
  <table class='table'>
    <thead>
      <tr>
        <th>컬럼 ID</th>
        <th>이름</th>
        <th>순서</th>
        <!-- 추가적으로 필요한 필드 -->
      </tr>
    </thead>
    <tbody id='columnsBody'>
      <!-- 여기에 컬럼 데이터가 들어갈 것입니다. -->
    </tbody>
  </table>
</div>

  </body>
  
   <script>
  document.addEventListener("DOMContentLoaded", function() {
    // 로컬 스토리지에서 토큰 가져오기
    const accessToken = localStorage.getItem("accessToken");

    // 로그인 버튼을 눌렀을 때의 이벤트
    if (accessToken) {
      // 토큰이 있으면 서버에 유저 정보 요청
      fetch("/auth/me", {
        headers: {
          "Authorization": `Bearer ${accessToken}`
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.email) {
          // 이메일 정보가 있으면 화면에 표시
          const emailElement = document.createElement("span");
          const emailText = document.createTextNode("login as : ");
          const emailData = document.createElement("span");

          emailData.textContent = data.email;
          emailData.style.color = "skyblue";  // 파란색으로 설정

          emailElement.appendChild(emailText);
          emailElement.appendChild(emailData);

          emailElement.classList.add("text-light");
          document.querySelector(".col-auto:last-child").appendChild(emailElement);
        }
      })
      .catch(error => {
        console.error("유저 정보를 가져오는데 실패했습니다.", error);
      });
    }
  });


  // 컬럼 버튼을 눌렀을 때의 이벤트
  document.getElementById('showColumns').addEventListener('click', function() {
    const accessToken = localStorage.getItem("accessToken");
    if (!accessToken) {
      alert("로그인이 필요합니다.");
      return;
    }

    // API 호출
    fetch('/columns', {
      headers: {
          "Authorization": `Bearer ${accessToken}`
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.message) {
        alert(data.message);  // 에러 메시지가 있다면 출력
      } else {
        // 테이블에 컬럼 데이터 삽입
        const columnsBody = document.getElementById('columnsBody');
        columnsBody.innerHTML = ''; // 기존 데이터 삭제
        data.forEach(column => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${column.columnId}</td>
            <td>${column.name}</td>
            <td>${column.order}</td>
            <!-- 추가적으로 필요한 필드 -->
          `;
          columnsBody.appendChild(row);
        });

        // 테이블 보이기
        document.getElementById('columnsTable').style.display = 'block';
      }
    })
    .catch(error => {
      console.error("컬럼 정보를 가져오는데 실패했습니다.", error);
      alert("컬럼 정보를 가져오는데 실패했습니다.");  // 이 부분도 추가할 수 있습니다.
  });
});
</script>
</html>